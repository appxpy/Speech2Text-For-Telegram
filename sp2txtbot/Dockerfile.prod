###########
# BUILDER #
###########

# pull official base image
FROM python:3.10-slim as builder

# set work directory
WORKDIR /usr/src/sp2txtbot

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update \
    && apt-get install -y gcc python3-dev musl-dev postgresql build-essential netcat ffmpeg && \
    apt clean --dry-run

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/sp2txtbot/wheels -r requirements.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.10-slim

# create directory for the app user
RUN mkdir -p /home/sp2txtbot

# create the app user
RUN addgroup -g 1000 -S sp2txtbot && adduser -S -u 1000 -G sp2txtbot sp2txtbot

# create the appropriate directories
ENV HOME=/home/sp2txtbot
ENV APP_HOME=/home/sp2txtbot/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update \
    && apt-get install -y gcc python3-dev musl-dev postgresql build-essential netcat ffmpeg && \
    apt clean --dry-run

COPY --from=builder /usr/src/sp2txtbot/wheels /wheels
COPY --from=builder /usr/src/sp2txtbot/requirements.txt .
RUN pip install --upgrade pip setuptools
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R sp2txtbot:sp2txtbot $APP_HOME

# change to the app user
USER sp2txtbot

# run entrypoint.prod.sh
ENTRYPOINT ["/home/sp2txtbot/web/entrypoint.prod.sh"]